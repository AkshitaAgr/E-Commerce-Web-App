-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-08-28 11:22:15 AEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE cart (
    cartid      INTEGER AUTO_INCREMENT NOT NULL,
    user_userid VARCHAR2(25) NOT NULL
);

ALTER TABLE cart ADD CONSTRAINT cart_pk PRIMARY KEY ( cartid );

CREATE TABLE cartitems (
    quantity          INTEGER NOT NULL,
    cart_cartid       INTEGER NOT NULL,
    product_productid VARCHAR2(25) NOT NULL
);

ALTER TABLE cartitems ADD CONSTRAINT cartitems_pk PRIMARY KEY ( cart_cartid,
                                                                product_productid );

CREATE TABLE category (
    categoryid VARCHAR2(25) NOT NULL,
    name       VARCHAR2(25) NOT NULL,
    productid  VARCHAR2(25)
);

ALTER TABLE category ADD CONSTRAINT category_pk PRIMARY KEY ( categoryid );

ALTER TABLE category DROP COLUMN productid;

CREATE TABLE delivery (
    deliveryid    VARCHAR2(25) NOT NULL,
    status        VARCHAR2(25) NOT NULL,
    "date"        DATE NOT NULL,
    time          DATE NOT NULL,
    user_userid   VARCHAR2(25),
    order_orderid VARCHAR2(25) NOT NULL
);

CREATE UNIQUE INDEX delivery__idx ON
    delivery (
        order_orderid
    ASC );

ALTER TABLE delivery ADD CONSTRAINT delivery_pk PRIMARY KEY ( deliveryid );

CREATE TABLE notifications (
    notifid VARCHAR2(25) NOT NULL,
    details VARCHAR2(250) NOT NULL
);

ALTER TABLE notifications ADD CONSTRAINT notifications_pk PRIMARY KEY ( notifid );

CREATE TABLE notified_by (
    user_userid           VARCHAR2(25) NOT NULL,
    notifications_notifid VARCHAR2(25) NOT NULL
);

ALTER TABLE notified_by ADD CONSTRAINT notified_by_pk PRIMARY KEY ( user_userid,
                                                                    notifications_notifid );

CREATE TABLE "order" (
    orderid                   INTEGER AUTO_INCREMENT NOT NULL,
    "date"                    DATE NOT NULL,
    subtotal                  FLOAT NOT NULL,
    shipping                  FLOAT NOT NULL,
    discount                  FLOAT,
    total                     FLOAT NOT NULL,
    transaction_transactionid INTEGER NOT NULL,
    delivery_deliveryid       VARCHAR2(25) 
);

CREATE UNIQUE INDEX order__idx ON
    "order" (
        transaction_transactionid
    ASC );

CREATE UNIQUE INDEX order__idxv1 ON
    "order" (
        delivery_deliveryid
    ASC );

ALTER TABLE "order" ADD CONSTRAINT order_pk PRIMARY KEY ( orderid );

CREATE TABLE order_frequency (
    frequency         INTEGER NOT NULL,
    user_userid       VARCHAR2(25) NOT NULL,
    product_productid VARCHAR2(25) NOT NULL
);

ALTER TABLE order_frequency ADD CONSTRAINT order_frequency_pk PRIMARY KEY ( product_productid,
                                                                            user_userid );

CREATE TABLE orderitems (
    quantity          INTEGER NOT NULL,
    order_orderid     INTEGER NOT NULL,
    -- transaction_transactionid INTEGER NOT NULL,
    product_productid VARCHAR2(25) NOT NULL
);

ALTER TABLE orderitems ADD CONSTRAINT orderitems_pk PRIMARY KEY ( product_productid,
                                                                  order_orderid );

CREATE TABLE product (
    productid           VARCHAR2(25) NOT NULL,
    name                VARCHAR2(100) NOT NULL,
    price               FLOAT(10) NOT NULL,
    store               VARCHAR2(25) NOT NULL,
    category_categoryid VARCHAR2(25)
);

ALTER TABLE product ADD CONSTRAINT product_pk PRIMARY KEY ( productid );

CREATE TABLE transaction (
    transactionid INTEGER AUTO_INCREMENT NOT NULL,
    status        VARCHAR2(25),
    user_userid   INTEGER NOT NULL
    -- order_orderid INTEGER NOT NULL
);

-- CREATE UNIQUE INDEX transaction__idx ON
--     transaction (
--         order_orderid
--     ASC );

ALTER TABLE transaction ADD CONSTRAINT transaction_pk PRIMARY KEY ( transactionid );

CREATE TABLE "user" (
    userid        INTEGER AUTO_INCREMENT NOT NULL,
    firstname     VARCHAR2(25) NOT NULL,
    middlename    VARCHAR2(25),
    lastname      VARCHAR2(25) NOT NULL,
    address       VARCHAR2(250) NOT NULL,
    mobile_num    VARCHAR2(10) NOT NULL,
    email_address VARCHAR2(250) NOT NULL,
    password_hash VARCHAR2(250) NOT NULL
);

ALTER TABLE "user" ADD CONSTRAINT user_pk PRIMARY KEY ( userid );

ALTER TABLE cart
    ADD CONSTRAINT cart_user_fk FOREIGN KEY ( user_userid )
        REFERENCES "user" ( userid );

ALTER TABLE cartitems
    ADD CONSTRAINT cartitems_cart_fk FOREIGN KEY ( cart_cartid )
        REFERENCES cart ( cartid );

ALTER TABLE cartitems
    ADD CONSTRAINT cartitems_product_fk FOREIGN KEY ( product_productid )
        REFERENCES product ( productid );

ALTER TABLE delivery
    ADD CONSTRAINT delivery_order_fk FOREIGN KEY ( order_orderid )
        REFERENCES "order" ( orderid );

ALTER TABLE delivery
    ADD CONSTRAINT delivery_user_fk FOREIGN KEY ( user_userid )
        REFERENCES "user" ( userid );

ALTER TABLE notified_by
    ADD CONSTRAINT notified_by_notifications_fk FOREIGN KEY ( notifications_notifid )
        REFERENCES notifications ( notifid );

ALTER TABLE notified_by
    ADD CONSTRAINT notified_by_user_fk FOREIGN KEY ( user_userid )
        REFERENCES "user" ( userid );

ALTER TABLE "order"
    ADD CONSTRAINT order_delivery_fk FOREIGN KEY ( delivery_deliveryid )
        REFERENCES delivery ( deliveryid );

ALTER TABLE order_frequency
    ADD CONSTRAINT order_frequency_product_fk FOREIGN KEY ( product_productid )
        REFERENCES product ( productid );

ALTER TABLE order_frequency
    ADD CONSTRAINT order_frequency_user_fk FOREIGN KEY ( user_userid )
        REFERENCES "user" ( userid );

ALTER TABLE "order"
    ADD CONSTRAINT order_transaction_fk FOREIGN KEY ( transaction_transactionid )
        REFERENCES transaction ( transactionid );

ALTER TABLE orderitems
    ADD CONSTRAINT orderitems_order_fk FOREIGN KEY ( order_orderid )
        REFERENCES "order" ( orderid );
-- ALTER TABLE orderitems
--     ADD CONSTRAINT orderitems_order_fk FOREIGN KEY ( transaction_transactionid )
--         REFERENCES transaction ( transactionid );

ALTER TABLE orderitems
    ADD CONSTRAINT orderitems_product_fk FOREIGN KEY ( product_productid )
        REFERENCES product ( productid );

ALTER TABLE product
    ADD CONSTRAINT product_category_fk FOREIGN KEY ( category_categoryid )
        REFERENCES category ( categoryid );

-- ALTER TABLE transaction
--     ADD CONSTRAINT transaction_order_fk FOREIGN KEY ( order_orderid )
--         REFERENCES "order" ( orderid );

ALTER TABLE transaction
    ADD CONSTRAINT transaction_user_fk FOREIGN KEY ( user_userid )
        REFERENCES "user" ( userid );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             4
-- ALTER TABLE                             28
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


-- -- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
-- --   at:        2023-08-28 11:22:15 AEST
-- --   site:      Oracle Database 11g
-- --   type:      Oracle Database 11g



-- -- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- -- predefined type, no DDL - XMLTYPE
-- -- DROP TABLE IF EXISTS cart;
-- -- DROP TABLE IF EXISTS cartitems;
-- -- DROP TABLE IF EXISTS category;
-- -- DROP TABLE IF EXISTS delivery;
-- -- DROP TABLE IF EXISTS notifications;
-- -- DROP TABLE IF EXISTS notified_by;
-- -- DROP TABLE IF EXISTS `order`;
-- -- DROP TABLE IF EXISTS orderitems;
-- -- DROP TABLE IF EXISTS order_frequency;
-- -- DROP TABLE IF EXISTS product;
-- -- DROP TABLE IF EXISTS transaction;
-- -- DROP TABLE IF EXISTS `user`;

-- CREATE TABLE IF NOT EXISTS `user` (
--     userid        INTEGER AUTO_INCREMENT PRIMARY KEY,
--     firstname     VARCHAR(25) NOT NULL,
--     middlename    VARCHAR(25),
--     lastname      VARCHAR(25) NOT NULL,
--     address       VARCHAR(250) NOT NULL,
--     mobile_num    VARCHAR(10) NOT NULL,
--     email_address VARCHAR(250) NOT NULL,
--     password_hash VARCHAR(250) NOT NULL
-- );

-- CREATE TABLE IF NOT EXISTS category (
--     categoryid VARCHAR(25) PRIMARY KEY,
--     name       VARCHAR(25) NOT NULL
-- );

-- CREATE TABLE IF NOT EXISTS cart (
--     cartid      VARCHAR(25) PRIMARY KEY,
--     user_userid INTEGER NOT NULL,
--     FOREIGN KEY(user_userid) REFERENCES `user`(userid)
-- );

-- CREATE TABLE IF NOT EXISTS product (
--     productid           VARCHAR(25) PRIMARY KEY,
--     name                VARCHAR(100) NOT NULL,
--     price               FLOAT(10) NOT NULL,
--     store               VARCHAR(25) NOT NULL,
--     category_categoryid VARCHAR(25)
-- );
-- -- ALTER TABLE cart ADD CONSTRAINT cart_pk PRIMARY KEY ( cartid );

-- CREATE TABLE IF NOT EXISTS cartitems (
--     quantity          INTEGER NOT NULL,
--     cart_cartid       VARCHAR(25) NOT NULL,
--     product_productid VARCHAR(25) NOT NULL,
--     PRIMARY KEY(cart_cartid, product_productid),
--     FOREIGN KEY(cart_cartid) REFERENCES cart(cartid),
--     FOREIGN KEY(product_productid) REFERENCES product(productid)
    
-- );

-- -- ALTER TABLE cartitems ADD CONSTRAINT cartitems_pk PRIMARY KEY ( cart_cartid,
--                                                                 -- product_productid );
-- -- ALTER TABLE category ADD CONSTRAINT category_pk PRIMARY KEY ( categoryid );

-- -- ALTER TABLE category DROP COLUMN productid;

-- CREATE TABLE IF NOT EXISTS `order` (
--     orderid                   INTEGER AUTO_INCREMENT PRIMARY KEY,
--     `date`                    DATE NOT NULL,
--     subtotal                  FLOAT NOT NULL,
--     shipping                  FLOAT NOT NULL,
--     discount                  FLOAT,
--     total                     FLOAT NOT NULL
--     -- transaction_transactionid INTEGER NOT NULL,
--     -- delivery_deliveryid       VARCHAR(25) ,
--     -- FOREIGN KEY(delivery_deliveryid) REFERENCES delivery(deliveryid)
-- );

-- CREATE TABLE IF NOT EXISTS delivery (
--     deliveryid    VARCHAR(25) PRIMARY KEY,
--     status        VARCHAR(25) NOT NULL,
--     date        DATE NOT NULL,
--     time          DATE NOT NULL,
--     user_userid   INTEGER NOT NULL,
--     order_orderid INTEGER NOT NULL,
--     FOREIGN KEY(user_userid) REFERENCES `user`(userid),
--     FOREIGN KEY(order_orderid) REFERENCES `order`(orderid)
-- );

-- -- CREATE UNIQUE INDEX delivery__idx ON
-- --     delivery (
-- --         order_orderid
-- --     ASC );

-- -- ALTER TABLE delivery ADD CONSTRAINT delivery_pk PRIMARY KEY ( deliveryid );

-- CREATE TABLE IF NOT EXISTS notifications (
--     notifid VARCHAR(25) PRIMARY KEY,
--     details VARCHAR(250) NOT NULL
-- );

-- -- ALTER TABLE notifications ADD CONSTRAINT notifications_pk PRIMARY KEY ( notifid );

-- CREATE TABLE IF NOT EXISTS notified_by (
--     user_userid           INTEGER NOT NULL,
--     notifications_notifid VARCHAR(25) NOT NULL,
--     PRIMARY KEY(user_userid, notifications_notifid),
--     FOREIGN KEY(user_userid) REFERENCES `user`(userid),
--     FOREIGN KEY(notifications_notifid) REFERENCES notifications(notifid)
-- );

-- CREATE TABLE IF NOT EXISTS transaction (
--     transactionid INTEGER AUTO_INCREMENT PRIMARY KEY,
--     `status`        VARCHAR(25),
--     user_userid   INTEGER NOT NULL,
--     order_orderid INTEGER NOT NULL
-- );
-- -- ALTER TABLE notified_by ADD CONSTRAINT notified_by_pk PRIMARY KEY ( user_userid,
-- --                                                                     notifications_notifid );

-- -- CREATE UNIQUE INDEX order__idx ON
-- --     `order` (
-- --         transaction_transactionid
-- --     ASC );

-- -- CREATE UNIQUE INDEX order__idxv1 ON
-- --     `order` (
-- --         delivery_deliveryid
-- --     ASC );

-- -- ALTER TABLE `order` ADD CONSTRAINT order_pk PRIMARY KEY ( orderid );

-- CREATE TABLE IF NOT EXISTS order_frequency (
--     frequency         INTEGER NOT NULL,
--     user_userid       INTEGER NOT NULL,
--     product_productid VARCHAR(25) NOT NULL,
--     PRIMARY KEY(product_productid, user_userid),
--     FOREIGN KEY(product_productid) REFERENCES product(productid),
--     FOREIGN KEY(user_userid) REFERENCES `user`(userid)
-- );

-- -- ALTER TABLE order_frequency ADD CONSTRAINT order_frequency_pk PRIMARY KEY ( product_productid,
--                                                                            --  user_userid );

-- CREATE TABLE IF NOT EXISTS orderitems (
--     quantity          INTEGER NOT NULL,
--     order_orderid     INTEGER NOT NULL,
--     -- transaction_transactionid INTEGER NOT NULL,
--     product_productid VARCHAR(25) NOT NULL,
--     PRIMARY KEY(product_productid, order_orderid),
--     FOREIGN KEY(product_productid) REFERENCES product(productid),
--     FOREIGN KEY(order_orderid) REFERENCES `order`(orderid)
-- );

-- -- ALTER TABLE orderitems ADD CONSTRAINT orderitems_pk PRIMARY KEY ( product_productid,
-- --                                                                   order_orderid );

-- -- ALTER TABLE product ADD CONSTRAINT product_pk PRIMARY KEY ( productid );

-- -- CREATE UNIQUE INDEX transaction__idx ON
-- --     transaction (
-- --         order_orderid
-- --     ASC );

-- -- ALTER TABLE transaction ADD CONSTRAINT transaction_pk PRIMARY KEY ( transactionid );


-- -- ALTER TABLE `user` ADD CONSTRAINT user_pk PRIMARY KEY ( userid );

-- -- ALTER TABLE cart
-- --     ADD CONSTRAINT cart_user_fk FOREIGN KEY ( user_userid )
-- --         REFERENCES `user` ( userid );

-- -- ALTER TABLE cartitems
-- --     ADD CONSTRAINT cartitems_cart_fk FOREIGN KEY ( cart_cartid )
-- --         REFERENCES cart ( cartid );

-- -- ALTER TABLE cartitems
-- --     ADD CONSTRAINT cartitems_product_fk FOREIGN KEY ( product_productid )
-- --         REFERENCES product ( productid );

-- -- ALTER TABLE delivery
-- --     ADD CONSTRAINT delivery_order_fk FOREIGN KEY ( order_orderid )
-- --         REFERENCES `order` ( orderid );

-- -- ALTER TABLE delivery
-- --     ADD CONSTRAINT delivery_user_fk FOREIGN KEY ( user_userid )
-- --         REFERENCES `user` ( userid );

-- -- ALTER TABLE notified_by
-- --     ADD CONSTRAINT notified_by_notifications_fk FOREIGN KEY ( notifications_notifid )
-- --         REFERENCES notifications ( notifid );

-- -- ALTER TABLE notified_by
-- --     ADD CONSTRAINT notified_by_user_fk FOREIGN KEY ( user_userid )
-- --         REFERENCES `user` ( userid );

-- -- ALTER TABLE `order`
-- --     ADD CONSTRAINT order_delivery_fk FOREIGN KEY ( delivery_deliveryid )
-- --         REFERENCES delivery ( deliveryid );

-- -- ALTER TABLE order_frequency
-- --     ADD CONSTRAINT order_frequency_product_fk FOREIGN KEY ( product_productid )
-- --         REFERENCES product ( productid );

-- -- ALTER TABLE order_frequency
-- --     ADD CONSTRAINT order_frequency_user_fk FOREIGN KEY ( user_userid )
-- --         REFERENCES `user` ( userid );

-- -- ALTER TABLE `order`
-- --     ADD CONSTRAINT order_transaction_fk FOREIGN KEY ( transaction_transactionid )
-- --         REFERENCES transaction ( transactionid );

-- -- ALTER TABLE orderitems
-- --     ADD CONSTRAINT orderitems_order_fk FOREIGN KEY ( order_orderid )
-- --         REFERENCES `order` ( orderid );
-- -- -- ALTER TABLE orderitems
-- -- --     ADD CONSTRAINT orderitems_order_fk FOREIGN KEY ( transaction_transactionid )
-- -- --         REFERENCES transaction ( transactionid );

-- -- ALTER TABLE orderitems
-- --     ADD CONSTRAINT orderitems_product_fk FOREIGN KEY ( product_productid )
-- --         REFERENCES product ( productid );

-- -- ALTER TABLE product
-- --     ADD CONSTRAINT product_category_fk FOREIGN KEY ( category_categoryid )
-- --         REFERENCES category ( categoryid );

-- -- ALTER TABLE transaction
-- --     ADD CONSTRAINT transaction_order_fk FOREIGN KEY ( order_orderid )
-- --         REFERENCES "order" ( orderid );

-- ALTER TABLE transaction
--     ADD CONSTRAINT transaction_user_fk FOREIGN KEY ( user_userid )
--         REFERENCES `user` ( userid );



-- -- Oracle SQL Developer Data Modeler Summary Report: 
-- -- 
-- -- CREATE TABLE                            12
-- -- CREATE INDEX                             4
-- -- ALTER TABLE                             28
-- -- CREATE VIEW                              0
-- -- ALTER VIEW                               0
-- -- CREATE PACKAGE                           0
-- -- CREATE PACKAGE BODY                      0
-- -- CREATE PROCEDURE                         0
-- -- CREATE FUNCTION                          0
-- -- CREATE TRIGGER                           0
-- -- ALTER TRIGGER                            0
-- -- CREATE COLLECTION TYPE                   0
-- -- CREATE STRUCTURED TYPE                   0
-- -- CREATE STRUCTURED TYPE BODY              0
-- -- CREATE CLUSTER                           0
-- -- CREATE CONTEXT                           0
-- -- CREATE DATABASE                          0
-- -- CREATE DIMENSION                         0
-- -- CREATE DIRECTORY                         0
-- -- CREATE DISK GROUP                        0
-- -- CREATE ROLE                              0
-- -- CREATE ROLLBACK SEGMENT                  0
-- -- CREATE SEQUENCE                          0
-- -- CREATE MATERIALIZED VIEW                 0
-- -- CREATE MATERIALIZED VIEW LOG             0
-- -- CREATE SYNONYM                           0
-- -- CREATE TABLESPACE                        0
-- -- CREATE USER                              0
-- -- 
-- -- DROP TABLESPACE                          0
-- -- DROP DATABASE                            0
-- -- 
-- -- REDACTION POLICY                         0
-- -- 
-- -- ORDS DROP SCHEMA                         0
-- -- ORDS ENABLE SCHEMA                       0
-- -- ORDS ENABLE OBJECT                       0
-- -- 
-- -- ERRORS                                   0
-- -- WARNINGS                                 0
